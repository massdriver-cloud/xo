// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package api

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// __bundleSourceCodeInput is used internally by genqlient
type __bundleSourceCodeInput struct {
	Id             string `json:"id"`
	OrganizationId string `json:"organizationId"`
}

// GetId returns __bundleSourceCodeInput.Id, and is useful for accessing the field via an interface.
func (v *__bundleSourceCodeInput) GetId() string { return v.Id }

// GetOrganizationId returns __bundleSourceCodeInput.OrganizationId, and is useful for accessing the field via an interface.
func (v *__bundleSourceCodeInput) GetOrganizationId() string { return v.OrganizationId }

// bundleSourceCodeBundleSourceCodeBundleSource includes the requested fields of the GraphQL type BundleSource.
type bundleSourceCodeBundleSourceCodeBundleSource struct {
	Source string `json:"source"`
}

// GetSource returns bundleSourceCodeBundleSourceCodeBundleSource.Source, and is useful for accessing the field via an interface.
func (v *bundleSourceCodeBundleSourceCodeBundleSource) GetSource() string { return v.Source }

// bundleSourceCodeResponse is returned by bundleSourceCode on success.
type bundleSourceCodeResponse struct {
	BundleSourceCode bundleSourceCodeBundleSourceCodeBundleSource `json:"bundleSourceCode"`
}

// GetBundleSourceCode returns bundleSourceCodeResponse.BundleSourceCode, and is useful for accessing the field via an interface.
func (v *bundleSourceCodeResponse) GetBundleSourceCode() bundleSourceCodeBundleSourceCodeBundleSource {
	return v.BundleSourceCode
}

// The query or mutation executed by bundleSourceCode.
const bundleSourceCode_Operation = `
query bundleSourceCode ($id: ID!, $organizationId: ID!) {
	bundleSourceCode(id: $id, organizationId: $organizationId) {
		source
	}
}
`

func bundleSourceCode(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
	organizationId string,
) (*bundleSourceCodeResponse, error) {
	req_ := &graphql.Request{
		OpName: "bundleSourceCode",
		Query:  bundleSourceCode_Operation,
		Variables: &__bundleSourceCodeInput{
			Id:             id,
			OrganizationId: organizationId,
		},
	}
	var err_ error

	var data_ bundleSourceCodeResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
